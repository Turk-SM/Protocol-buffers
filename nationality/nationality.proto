syntax = "proto3";

package nationality;

option go_package = "genproto/nationality";

service NationalityService {
  // National Foods
  rpc CreateNationalFood(NationalFood) returns (NationalFoodResponse);
  rpc UpdateNationalFoods(UpdateNationalFood) returns (NationalFoodResponse);
  rpc GetNationalFoodByID(NationalFoodId) returns (NationalFoodResponse);
  rpc ListNationalFood(NationalFoodList) returns (NationalFoodListResponse);
  rpc DeleteNationalFood(NationalFoodId) returns (Message);
  rpc AddNationalFoodImage(NationalFoodImage) returns (Message);
  rpc RemoveNationalFoodImage(NationalFoodImage) returns (Message);
  rpc GetNationalFoodByCountry(NationalFoodCountry) returns (NationalFoodListResponse);
  rpc SearchNationalFood(NationalFoodSearch) returns (NationalFoodListResponse);
  rpc GetRatingNationalFood(NationalFoodId) returns (RatingResponse);

  // Historical
  rpc AddHistorical(Historical) returns (HistoricalResponse);
  rpc UpdateHistoricals(UpdateHistorical) returns (HistoricalResponse);
  rpc GetHistoricalByID(HistoricalId) returns (HistoricalResponse);
  rpc ListHistorical(HistoricalList) returns (HistoricalListResponse);
  rpc DeleteHistorical(HistoricalId) returns (Message);
  rpc SearchHistorical(HistoricalSearch) returns (HistoricalListResponse);
  rpc GetHistoricalByCountry(HistoricalCountry) returns (HistoricalListResponse);
  rpc AddHistoricalImage(HistoricalImage) returns (Message);
  rpc RemoveHistoricalImage(HistoricalImage) returns (Message);

  // Attractions
  rpc CreateAttraction(Attraction) returns (AttractionResponse);
  rpc UpdateAttractions(UpdateAttraction) returns (AttractionResponse);
  rpc GetAttractionByID(AttractionId) returns (AttractionResponse);
  rpc ListAttraction(AttractionList) returns (AttractionListResponse);
  rpc DeleteAttraction(AttractionId) returns (Message);
  rpc AddAttractionImage(AttractionImage) returns (Message);
  rpc RemoveAttractionImage(AttractionImage) returns (Message);
  rpc SearchAttraction(AttractionSearch) returns (AttractionListResponse);

  rpc CreateAttractionType(CreateAttractionTypeRequest) returns (CreateAttractionTypeResponse) {}
  rpc GetAttractionType(GetAttractionTypeRequest) returns (GetAttractionTypeResponse) {}
  rpc UpdateAttractionType(UpdateAttractionTypeRequest) returns (UpdateAttractionTypeResponse) {}
  rpc DeleteAttractionType(DeleteAttractionTypeRequest) returns (Message) {}
  rpc ListAttractionTypes(ListAttractionTypesRequest) returns (ListAttractionTypesResponse) {}

  //countries
  rpc CreateCountry(CreateCountryRequest) returns (CreateCountryResponse) {}
  rpc GetCountry(GetCountryRequest) returns (GetCountryResponse) {}
  rpc UpdateCountry(UpdateCountryRequest) returns (UpdateCountryResponse) {}
  rpc DeleteCountry(DeleteCountryRequest) returns (Message) {}
  rpc ListCountries(ListCountriesRequest) returns (ListCountriesResponse) {}


  rpc CreateCity(CreateCityRequest) returns (CreateCityResponse) {}
  rpc GetCity(GetCityRequest) returns (CreateCityResponse) {}
  rpc UpdateCity(CreateCityResponse) returns (CreateCityResponse) {}
  rpc DeleteCity(GetCityRequest) returns (Message) {}
  rpc ListCity(ListCityRequest) returns (GetListCountry) {}
  rpc GetBYCount(CountryId) returns (GetListCountry) {}
}
message GetListCountry {
  repeated CreateResponse countries = 1;
  int32 total = 2;
}

message CreateResponse {
  string id = 1;
  string city_name = 2;
  string country_name = 3;
  string flag_url = 4;
}

message CountryId {
  string id = 1;
}

message ListCityRequest {
  int64 limit = 1;
  int64 offset = 2;
  string name = 3;
  string country_id = 4;
}


message GetCityRequest {
  string id = 1;
}

message  CreateCityRequest {
  string country_id = 1;
  string name = 2;
}

message  CreateCityResponse {
  string id = 1;
  string country_id = 2;
  string name = 3;
}


message HistoricalImage {
  string id = 1;
  string url = 2;
}

message HistoricalCountry {
  string city = 1;
}

message HistoricalSearch {
  string search = 1;
}

message Message {
  string message = 1;
}

message HistoricalListResponse {
  repeated HistoricalResponse historical = 1;
  string total = 2;
}

message HistoricalList {
  int64 limit = 1;
  int64 offset = 2;
  string city = 4;
}

message HistoricalId {
  string id = 1;
}
message UpdateHistorical {
  string id = 1;
  string city = 3;
  string name = 4;
  string description = 5;
  string image_url = 6;
  string created_at = 7;
  string updated_at = 8;
}

message Historical {
  string city = 2;
  string name = 3;
  string description = 4;
  string image_url = 5;
  string created_at = 6;
  string updated_at = 7;
}

message HistoricalResponse {
  string id = 1;
  string city = 3;
  string name = 4;
  string description = 5;
  string image_url = 6;
  string created_at = 7;
  string updated_at = 8;
}
message NationalFood {
  string food_name = 1;
  string country_id = 3;
  string description = 4;
  string ingredients = 5;
  string image_url = 6;
  string created_at = 7;
}
message NationalFoodResponse {
  string id = 8;
  string food_name = 1;
  string country_id = 3;
  string description = 4;
  string ingredients = 5;
  string image_url = 6;
  string created_at = 7;
}

message NationalFoodId {
  string id = 1;
}

message NationalFoodList {
  int64 limit = 1;
  int64 offset = 2;
  string country_id = 3;
}

message NationalFoodListResponse {
  repeated NationalFoodResponse national_food = 1;
  string total = 2;
}

message NationalFoodImage {
  string id = 1;
  string image_url = 2;
}

message NationalFoodCountry {
  string country_id = 1;
}

message NationalFoodSearch {
  string search = 1;
}

message RatingResponse {
  int32 rating = 1;
}

message Attraction {
  string city = 1;
  string name = 2;
  string description = 3;
  string category = 4; // corresponds to the ENUM 'attraction_type'
  string location = 5;
  string image_url = 6;
  string created_at = 7;
  string updated_at = 8;
}

message AttractionList {
  string city = 1;
  string category = 2;
  string name = 3;
  string description = 4;
  int64 limit = 5;
  int64 offset = 6;
}

message AttractionResponse {
  string id = 1;
  string category = 2;
  string name = 3;
  string description = 4;
  string city = 5;
  string location = 6;
  string image_url = 7;
  string created_at = 8;
  string updated_at = 9;
}

message AttractionListResponse {
  repeated AttractionResponse attractions = 1;
  string total = 2;
}


message AttractionId {
  string id = 1;
}

message UpdateNationalFood {
  string id = 1;
  string food_name = 6;
  string country_id = 3;
  string description = 4;
  string ingredients = 5;
  string image_url = 9;
  string created_at = 8;
  string updated_at = 7;
}

message UpdateAttraction {
  string id = 1;
  string city = 2;
  string name = 3;
  string description = 4;
  string category = 5;
  string location = 6;
  string image_url = 7;
  string created_at = 8;
  string updated_at = 9;
}




message AttractionImage {
  string id = 1;
  string image_url = 2;
}

message AttractionCountry {
  string city = 1;
}

message AttractionSearch {
  string search_term = 1;
  string limit = 2;
  string offset = 3;
}

// Enum for attraction types
enum AttractionType {
  NATURE = 0;
  PARK = 1;
  BEACH = 2;
  NATIONAL_PARKS = 3;
  CULTURE = 4;
  MUSEUM = 5;
  LAKE = 6;
}

message CreateAttractionTypeRequest {
  string name = 1;
  int32 activity = 2;
}

message CreateAttractionTypeResponse {
  AttractionType1 attraction_type = 1;
}

message GetAttractionTypeRequest {
  string id = 1;
}

message GetAttractionTypeResponse {
  AttractionType1 attraction_type = 1;
}

message UpdateAttractionTypeRequest {
  string id = 1;
  string name = 2;
  int32 activity = 3;
}

message UpdateAttractionTypeResponse {
  AttractionType1 attraction_type = 1;
}

message DeleteAttractionTypeRequest {
  string id = 1;
}
message ListAttractionTypesRequest {
  int64 limit = 1;
  int64 offset = 2;
  string name = 3;
}

message ListAttractionTypesResponse {
  repeated AttractionType1 attraction_types = 1;
  string total = 2;
}

message AttractionType1 {
  string id = 1;
  string name = 2;
  int32 activity = 3;
}

message CreateCountryRequest {
  string name = 1;
  string image_url = 2;
}

message CreateCountryResponse {
  string id = 1;
  string name = 2;
  string image_url = 3;
}

message GetCountryRequest {
  string id = 1;
}

message GetCountryResponse {
  string id = 1;
  string name = 2;
  string image_url = 3;
}

message UpdateCountryRequest {
  string id = 1;
  string name = 2;
  string image_url = 3;
}

message UpdateCountryResponse {
  string id = 1;
  string name = 2;
  string image_url = 3;
}

message DeleteCountryRequest {
  string id = 1;
}

message ListCountriesRequest {
  int64 limit = 1;
  int64 offset = 2;
  string name = 3;
}

message ListCountriesResponse {
  repeated Country countries = 1;
  string total = 2;
}

message Country {
  string id = 1;
  string name = 2;
  string image_url = 4;
}